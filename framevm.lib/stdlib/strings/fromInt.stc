export INT_TO_STRING as int_to_string

// Translated from the Roger implementation
// The original Stacy implementation required stack proportional to the size of the integer

INT_TO_STRING:
	stack := 6
	new 3
	dup
	get [0]
	setr [0]
	newscope P
	
	new 1
	dup
	get [0]
	setr [0]
	
	call __CALC_LENGTH __INT_TO_STRING

__INT_TO_STRING:
	rget
	set [1]
	get [0]
	ipush 0
	lti
	jumpz __POS_INT_TO_STRING __NEG_INT_TO_STRING

__CALC_LENGTH:
	stack := 3
	ipush 0
	jump __CALC_LENGTH_COMP
	
__CALC_LENGTH_COMP:
	ipush 1
	addi
	get [0]
	ipush 10
	divi
	dup
	set [0]
	
	jumpz __CALC_LENGTH_END __CALC_LENGTH_COMP

__CALC_LENGTH_END:
	return
	
__NEG_INT_TO_STRING:
	get [P, 0]
	negi
	set [0]
	
	get [1]
	ipush 2
	addi
	newr
	
	dup
	size
	set [2]
	
	dup
	set [1]
	
	dup
	dup
	size
	ipush 1
	subi
	setr [0]
	
	dup
	cpush '-'
	
	setr [1]
	jump __INT_TO_DIGITS

__POS_INT_TO_STRING:
	get [P, 0]
	set [0]
	
	get[1]
	ipush 1	
	addi
	newr
	
	dup
	size
	set [2]
	
	dup
	set [1]
	
	dup
	size
	ipush 1
	subi
	setr [0]
	jump __INT_TO_DIGITS
	
__INT_TO_DIGITS:
	get [2]
	ipush 1
	subi
	
	dup
	set [2]
	
	get[1]
	swap
	ipush 48
	get [0]
	ipush 10
	modi
	addi
	setr
	
	get [0]
	ipush 10
	divi
	set [0]
	
	get [0]
	jumpz __END __INT_TO_DIGITS
	
__END:
	get [1]
	return
