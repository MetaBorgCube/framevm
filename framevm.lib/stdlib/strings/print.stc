export PRINT_STRING as print_string
	
PRINT_STRING:
	stack := 4
	get [0, 0]			// Size
	ipush 0				// Idx
	jump __PRINT_LOOP	//
	
__PRINT_LOOP:
	dup 2				// Size
	dup 2				// Idx
	eqi					// If end of string
	jumpz __PRINT_CHAR __PRINT_END
	
__PRINT_END:
	pop					// Clear idx
	pop					// Clear size
	cget [c]			// Return address
	cret				// Return
	
__PRINT_CHAR:
	ipush 1				// Increment the index
	addi				//
						//
	dup					// Get the old index + 1 
	get [0]				//
	swap				//
	getr				//
	printc				// Print that character
						//
	jump __PRINT_LOOP		// Goto next character
	
