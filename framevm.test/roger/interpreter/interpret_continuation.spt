module rgr_interpreter_continuations

language framevm

fixture [[#registers 4
MAIN:
	r0 <- newCF(new(), iload(2))
	[[...]]
	
LBL1:
	print(iload(1))
	return(iload(0))
	
MAIN_END:
	print(iload(12))
	return(iload(0))
]]

test return [[
	callC(getC($c), iload(0))
]] transform "Run -> Run" to ""

test CF unpack [[
	print(unpackCF(r0))
	callC(getC($c), iload(0))
]] transform "Run -> Run" to "Frame(frame_1)"

test call CF 1 [[
	setC(r0, $c, curC(MAIN_END))
	callCF(r0, LBL1)
]] transform "Run -> Run" to "IntV(1)
IntV(12)"

test tailcall [[
	r1 <- newCF(new(), iload(2))
	setC(r1, $c, getC($c))
	callCF(r1, LBL2)
MAIN2:
	print(iload(42))
	return(iload(0))
LBL2:
	print(iload(2))
	return(iload(0))
]] transform "Run -> Run" to "IntV(2)"

test tailcall 2 [[
	r1 <- newCF(new(), iload(2))
	setC(r1, $c, getC(curCF(), $c))
	callCF(r1, LBL2)
MAIN2:
	print(iload(42))
	return(iload(0))
LBL2:
	print(iload(2))
	return(iload(0))
]] transform "Run -> Run" to "IntV(2)"

test call CF [[
	setC(r0, $c, curC(MAIN2))
	callCF(r0, LBL1)
MAIN2:
	r0 <- rget()
	print(r0)
	return(iload(0))
]] transform "Run -> Run" to "IntV(1)
IntV(0)"

test rget single [[
	setC(r0, $c, curC(MAIN2))
	callCF(r0, LBL1)
MAIN2:
	r0 <- rget()
	print(r0)
	return(iload(0))
]] transform "Run -> Run" to "IntV(1)
IntV(0)"

test rget multiple [[
	r0 <- newCF(new(), iload(2))
	r0 <- newC(r0, LBL)
	setC(unpackC(r0), $c, curC(MAIN2))
	callC(r0)
MAIN2:
	r0 <- rget()
	r1 <- rget()
	print(r0)
	print(r1)
	return(iload(0))
LBL:
	callC(getC($c), iload(1), iload(2))
]] transform "Run -> Run" to "IntV(2)
IntV(1)"

test variable cont slots [[
	r2 <- iload(3)
	r3 <- new(1)
	set(r3, [0], r2)
	r1 <- newCF(r3, addi(r2, iload(1)))
	r1 <- newC(r1, MAIN2)
	setC(unpackC(r1), r2, getC($c))
	callC(r1)
MAIN2:
	r0 <- get([0])
	print(r0)
	callC(getC(r0), iload(0))
]] transform "Run -> Run" to "IntV(3)"
