module stc_interpreter_continuation

language framevm

fixture [[#link Q -> 1
MAIN:
	stack := 99
	[[...]]
	ipush 0
	return
]]

test rget order [[
	new
	call FUNC LBL
FUNC:
	stack := 99
	ipush 0
	ipush 1
	transfer 2 [c]
	cget [c]
	cret
LBL:
	stack := 99
	rget 2
	print
	print
	
]] transform "Run -> Run" to "IntV(1)
IntV(0)"

test rget order double transfer[[
	new
	call FUNC LBL
FUNC:
	stack := 99
	ipush 0
	ipush 1
	transfer 1 [c]
	transfer 1 [c]
	cget [c]
	cret
LBL:
	stack := 99
	rget 2
	print
	print
	
]] transform "Run -> Run" to "IntV(0)
IntV(1)"

test rget order return [[
	new
	call FUNC LBL
FUNC:
	stack := 99
	ipush 0
	ipush 1
	return 2
LBL:
	stack := 99
	rget 2
	print
	print
	
]] transform "Run -> Run" to "IntV(1)
IntV(0)"

test rget order yield [[
	new
	call FUNC LBL
FUNC:
	stack := 99
	ipush 0
	yield FUNC2
LBL:
	stack := 99
	rget 2
	print
	print
	jump FUNC2
FUNC2:	
]] transform "Run -> Run" to "IntV(0)
Continuation(controlFrame_1)"
