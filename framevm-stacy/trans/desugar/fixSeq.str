module fixSeq

imports
    signatures/framevm-stacy-sig
    signatures/fvm-common-sig
    stc-common
    
rules

    fix-seq: STC_Program(fn, i, s, a, blocks) -> STC_Program(fn, i, s, a, <map(fix-seq)> blocks)
    fix-seq: STC_PseudoCode(body) -> STC_PseudoCode(body)
    fix-seq: STC_Block(lbl, body) -> STC_Block(lbl, <fix-seq> body)
    fix-seq: STC_RetSeqJump(ret, body, jump) -> STC_Seq([ret |<concat> [body, [jump]]])
    fix-seq: STC_SeqJump(body, jump) -> STC_Seq(<concat> [body, [jump]])
  
  
    resugar-seq: STC_Program(fn, i, s, a, blocks) -> STC_Program(fn, i, s, a, <map(resugar-seq)> blocks)
    
    resugar-seq: STC_PseudoCode(body) -> STC_PseudoCode(body)
    resugar-seq: STC_Block(lbl, STC_SeqJump([h|body], last)) -> STC_Block(lbl, STC_RetSeqJump(h, body, last))
      where <is-ret> h
    resugar-seq: f@STC_Block(lbl, STC_SeqJump(body, last)) -> f
          
    resugar-seq: STC_Block(lbl, STC_Seq(body)) -> <resugar-seq> STC_Block(lbl, STC_SeqJump(body2, last))
      where
        (body2, last) := <split-init-last> body
    
    is-ret: r@STC_ContRGetN(_) -> r
    is-ret: r@STC_ContRGet() -> r
