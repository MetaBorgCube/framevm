module Common

lexical syntax

  ID             = [a-zA-Z\_] [a-zA-Z0-9\_]*
  LABEL          = [A-Z\_] [A-Z0-9\_]* 
  MAIN			 = "MAIN"
  INT            = "-"? [0-9]+ 
  INTLZ          = [1-9][0-9]* 
  INTLEZ         = [0-9]+ 
  BOOL			 = "true"
  BOOL			 = "false"
  
  STRING         = "\"" StringChar* "\"" 
  StringChar     = ~[\"\n] 
  StringChar     = "\\\"" 
  StringChar     = BackSlashChar 
  BackSlashChar  = "\\" 
  LAYOUT         = [\ \t\n\r] 
  CommentChar    = [\*] 
  LAYOUT         = "/*" InsideComment* "*/" 
  InsideComment  = ~[\*] 
  InsideComment  = CommentChar 
  LAYOUT         = "//" ~[\n\r]* NewLineEOF 
  NewLineEOF     = [\n\r] 
  NewLineEOF     = EOF 
  EOF            =  

  LABEL = 	"MAIN" 		{reject}
  ID = 		"addi" 		{reject}
  ID = 		"jump" 		{reject}
  ID = 		"jumpz" 	{reject}
  ID = 		"dup"	 	{reject}
  ID = 		"new"	 	{reject}
  ID = 		"pushi"	 	{reject}
  ID = 		"MAIN"	 	{reject}
  ID = 		"true"	 	{reject}
  ID = 		"false"	 	{reject}
  
  
lexical restrictions

  // Ensure greedy matching for lexicals
  
  CommentChar   -/- [\/]
  INT           -/- [0-9]
  INTLZ         -/- [0-9]
  INTLEZ        -/- [0-9]
  ID            -/- [a-zA-Z0-9\_]
  LABEL         -/- [A-Z0-9\_]
  MAIN          -/- [A-Z0-9\_]
  
  // EOF may not be followed by any char
  
  EOF           -/- ~[]
  
  // Backslash chars in strings may not be followed by " 
  
  BackSlashChar -/- [\"]

context-free restrictions

  // Ensure greedy matching for comments
  
  LAYOUT? -/- [\ \t\n\r]
  LAYOUT? -/- [\/].[\/]
  LAYOUT? -/- [\/].[\*]
