module framevm

imports Common

context-free start-symbols Program

sorts Program context-free syntax
  
  Program.Program = <<Block*>>
  
sorts Block context-free syntax

  Block.Block = <
    <ID>:
      <Instr*>
  >
  
sorts Instr context-free syntax
  
  Instr.IAdd   = <iadd>
  Instr.IConst = <iconst <INT>>
  
  Instr.New  = <new>
  Instr.Get  = <get <Path>>
  Instr.Set  = <set <Path>>
  
  Path.Path  = <[<{INT ","}+>]>

  Instr.Jump = <jump <ID>>
  
/* 

Values 

CodeV
- jump
- return 
- ...

IntV
- add
- pushi
- jumpz

BoolV
- true, false
- and 
- or

FrameRefV
- new
- set
- get 

closure =

Frame with code pointer + reference pointer

*/
  
/*

initialization of frame slots / soundness 

distinction between frame links and reference edges to frames 

well-formedness properties of instructions?

e.g. clean operand stack

*/