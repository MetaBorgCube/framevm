module framevm

imports
  
  completion/completion
  pp
  outline
  fvm-analysis
  fvm-desugar
  desugar/toRISC
  interpreter/interpreter

rules // Debugging
  
  debug-show-desugared-aterm:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path
    ; result   := <desugar> ast

  debug-show-desugared-full-aterm:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path
    ; result   := <desugar; to-RISC-all> ast
    
  editor-format-desugar:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      ext      := <get-extension> path
    ; filename := <guarantee-extension(|$[risc.[ext]])> path
    ; result   := <pp-debug-framevm> <resugar> <to-RISC-all> <desugar> ast
    
  
  
  
  run-program-cisc:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"value")> path
    ; result   := <eval-program> ast
    
  run-program-risc:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"value")> path
    ; result   := <eval-program> <to-RISC-all> ast
    
  run-program-cisc-debug:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"value")> path
    ; result   := <eval-program-debug> ast
    
  run-program-risc-debug:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"value")> path
    ; result   := <eval-program-debug> <to-RISC-all> ast
    
  run-program-compare:
    (_, _, ast, path, project-path) -> (filename, out)
    with
      filename := <guarantee-extension(|"value")> path
    ; result1  := <eval-program> ast
    ; result2  := <eval-program> <to-RISC-all> ast
    ; out      := <compare-output> (result1, result2)
    
  compare-output = equal < !"Yes" + !"No"
