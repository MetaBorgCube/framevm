module framevm

imports
  
  completion/completion
  pp
  outline
  fvm-analysis
  fvm-desugar
  reduce/reduce
  transform/transform
  interpreter/interpreter

rules // Syntax  
  debug-show-desugared-aterm:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path
    ; result   := <strip-annos> ast


rules // Reduce
  debug-show-reduced-aterm:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path
    ; result   := <fvm-reduce; strip-annos> ast
    
  editor-format-reduce:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      ext      := <get-extension> path
    ; filename := <guarantee-extension(|$[red.[ext]])> path
    ; result   := <fvm-reduce; resugar; pp-debug-framevm> ast
    

rules // Transform
  debug-show-transformed-aterm:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"aterm")> path
    ; result   := <fvm-transform; strip-annos> ast
    
  editor-format-transform:
    (_, _, ast, path, project-path) -> (filename, result)
    where
      "stc" := <get-extension> path
    with
      filename := <guarantee-extension(|"risc.stc")> path
    ; result   := <fvm-transform; resugar; pp-debug-framevm> ast
    
  editor-format-transform:
    (_, _, ast, path, project-path) -> (filename, result)
    where
      "rgr" := <get-extension> path
    with
      filename := <guarantee-extension(|"stc")> path
    ; result   := <fvm-transform; resugar; pp-debug-framevm> ast
    
    
rules //run  
  run-program:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"value")> path
    ; result   := <eval-program> ast
    
  run-program-debug:
    (_, _, ast, path, project-path) -> (filename, result)
    with
      filename := <guarantee-extension(|"value")> path
    ; result   := <eval-program-debug> ast
 