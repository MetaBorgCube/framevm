module stack

imports
	signatures/framevm-sig
	desugar

rules
	// check stack sizes of blocks
	stack-calc: Program(blocks) -> Program(out_blocks)
	  where
    	(errors, out_blocks) := <unzip><mapconcat(stack-calc)> blocks
  
	stack-calc: PseudoCode(_) -> []
    		
  	stack-calc: Block(Label(lbl), Seq(body)) -> [(errors, Block(Label(lbl), Seq(body)))]
  	  where
  		(size, errors) := <foldl(stack-update)>(body, (0, []));
  		_ := <debug> ("Stack size after block", lbl, size)
  		// If size > 0 give warning
  
  	stack-update: (instr, (size, err)) -> (new_size, err)
  	  where
  	  	new_size := <addi> (size, <stack-delta> instr);
  	  	_ := <geq> (new_size, 0)
  	  	
  	 stack-update: (instr, (size, errs)) -> (0, [err | errs])
  	  where
  	  	err := <debug> ("Popping from empty stack at", instr)
  	  	
	// For each operation, calculate the change in stack size
	stack-delta: IPush(_) -> 1
	stack-delta: IAdd()   -> -1
	stack-delta: IEq()    -> -1
	stack-delta: ILt()    -> -1
  
	stack-delta: New()    -> 1
	stack-delta: Dup()    -> 1
	stack-delta: DupN(_)  -> 1
	stack-delta: Swap()   -> 0
	stack-delta: SwapN(_) -> 0
  
	stack-delta: Link(_, _) -> -1
	stack-delta: LinkR(_)   -> -2
  
	stack-delta: Get()      -> 0
	stack-delta: Get(path)  -> 1
	stack-delta: GetR()     -> -1
	stack-delta: GetR(path) -> 0
  
	stack-delta: Set()      -> -2
	stack-delta: Set(path)  -> -1
	stack-delta: SetR()     -> -3
	stack-delta: SetR(path) -> -2
  
	stack-delta: Print()  -> -1
	stack-delta: Return() -> -1
  
  
	stack-delta: JumpZ(lbl1, lbl2) -> -1
	stack-delta: Jump(lbl) -> 0
	stack-delta: Call(lbl1, lbl2) -> -1
	stack-delta: Call(lbl) -> -1
	
	stack-delta: ScopeUp(path, lbl) -> 0
	stack-delta: ScopeDown(lbl) -> -1
	
	stack-delta: ContNew() -> 1
	stack-delta: ContNew(Label(lbl)) -> 1
	stack-delta: ContNewR(Label(lbl)) -> 0
	
	stack-delta: ContUnpack() -> 0
	stack-delta: ContCall() -> -1
	
	stack-delta: Try(_, _) -> -2
	stack-delta: Try() -> -2
	stack-delta: Throw() -> -1
	
	stack-delta: Debug() -> 0
  
  	stack-delta: a -> 0
  	  where
  		_ := <debug> ("Stack calculations not implemented for", a)
