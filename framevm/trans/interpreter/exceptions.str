module exceptions

imports 
	signatures/framevm-sig
	interpreter/common
	interpreter/external
	
rules	
	// Try/2
	// Takes two frames from the stack and sets them up to be a try-catch block
	// Moves execution to the try-block with the catch block as exception handler
	eval: (Try(Label(lbl_try), Label(lbl_catch)), env1) -> env8
	  where
	  	cont := <cont-get-cc(|env1)> <frame-this(|env1)>;
	  	ex   := <ex-get-cx(|env1)>   <frame-this(|env1)>;
	  	
	  	(env2, FrameRef(frame_catch)) := <stack-pop(|env1)>;
	  	(env3, FrameRef(frame_try))   := <stack-pop(|env2)>;
	  	
	  	catch := Continuation(frame_catch, lbl_catch);
	  	
	  	env4 := <cont-set-cc(|env3)> (frame_try, cont);
	  	env5 := <ex-set-cx(|env4)>   (frame_try, catch);
	  	
	  	env6 := <cont-set-cc(|env5)> (frame_catch, cont);
	  	env7 := <ex-set-cx(|env6)>   (frame_catch, ex);
	  	
	  	env8 := <cont-call(|env7)> (frame_try, lbl_try) 
	  	
	// Try/0
	// Takes two continuation from the stack and sets them up to be a try-catch block
	// Moves execution to the try-block with the catch block as exception handler
	eval: (Try(), env1) -> env8
	  where
	  	cont := <cont-get-cc(|env1)> <frame-this(|env1)>;
	  	ex   := <ex-get-cx(|env1)>   <frame-this(|env1)>;
	  	
	  	(env2, Continuation(frame_catch, lbl_catch)) := <stack-pop(|env1)>;
	  	(env3, Continuation(frame_try, lbl_try))     := <stack-pop(|env2)>;
	  	
	  	catch := Continuation(frame_catch, lbl_catch);
	  	
	  	env4 := <cont-set-cc(|env3)> (frame_try, cont);
	  	env5 := <ex-set-cx(|env4)>   (frame_try, catch);
	  	
	  	env6 := <cont-set-cc(|env5)> (frame_catch, cont);
	  	env7 := <ex-set-cx(|env6)>   (frame_catch, ex);
	  	
	  	env8 := <cont-call(|env7)> (frame_try, lbl_try) 
	
	// Throw/0
	// Throw the element on top of the stack to the current exception handler
	eval: (Throw(), env1) -> env4
	  where
	  	(env2, throwable) := <stack-pop(|env1)>;
	  	Continuation(handle_frame, handle_block) := <ex-get-cx(|env2)> <frame-this(|env2)>;
	  	env3 := <frame-set(|env2)> (handle_frame, "r", throwable);
	  	env4 := <cont-call(|env3)> (handle_frame, handle_block)
	  	
	  	
	
	
	
	