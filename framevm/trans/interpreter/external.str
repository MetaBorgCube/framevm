module external

imports signatures/framevm-sig

rules 
	external vm-init(|)				// (links, conts, slots) -> env
	external vm-store-block(|env)   // env| (lbl, [instr]) -> env' 
	external vm-start(|env)			// env| env| -> env'
	external vm-stop(|env)          // env| -> string
	external vm-execute(eval|env)	// eval|env| -> env'
	
	external vm-debug(|env)			// env| -> env'
	
	external stack-push(|env)		// env| val -> env'
	external stack-pop-any(|env)	// env| -> (env', val)
	external stack-pop-int(|env)	// env| -> (env', int)
	external stack-pop-cont(|env)	// env| -> (env', continuation)
	external stack-pop-frame(|env)	// env| -> (env', frame)
	external stack-size(|env)		// env| -> int
	
	external frame-get-slot(|env)	// env| (frame, slot) -> val
	external frame-get-link(|env)	// env| (frame, (link_id, idx)) -> frame
	external frame-set-slot(|env)	// env| (frame, slot, val) -> env'
	external frame-new(|env)		// env| size -> (env', frame)
	external frame-this(|env)		// env| -> frame
	external frame-link(|env)		// env| (frame, frame, (lbl, idx)) -> env'
	external frame-copy(|env)		// env| (frame, policy) -> (env', frame)
	external frame-set-current(|env2) // env| (cont, frame) -> env'

	external vm-print(|env)			// env| val -> (env', string)
	external vm-jump(|env)			// env| lbl -> env'
	external vm-cont-new(|env)		// env| (frame, lbl, size) -> (env', cont)

	external cont-call(|env)	    // env| cont -> env'
	external cont-set(|env)		    // env| (cont, (contId, contIdx), cont) -> env'
	external cont-get(|env)			// env| (cont, (cont_id, idx)) -> cont
	external cont-this(|env)		// env| -> cont
	external cont-transfer(|env)	// env| (cont, [val])-> env'
	external cont-copy(|env)		// env| (cont, policy) -> (env', cont)
	
rules
	ex-set-cx(|env):   (cont, ex)   -> <cont-set(|env)> (cont, ("x", 1), ex)
	cont-set-cc(|env): (cont, ret)  -> <cont-set(|env)> (cont, ("c", 0), ret)
	
	ex-get-cx(|env):   cont -> <cont-get(|env)> (cont, ("x", 1))
	cont-get-cc(|env): cont -> <cont-get(|env)> (cont, ("c", 0))
	
	frame-set(|env): (frame, FVM_Slot(slot), value) -> <frame-set-slot(|env)> (frame, slot, value)
	frame-set(|env): (frame, FVM_Cont(cont), value) -> <cont-set(|env)> (frame, cont, value)
	