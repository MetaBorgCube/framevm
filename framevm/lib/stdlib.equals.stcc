( [("equals", "EQUALS")]
, [ FVM_Block(
      FVM_Label("EQUALS")
    , Some(4)
    , FVM_Seq(
        [ STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_Get(FVM_Path([FVM_Slot("1")]))
        , STC_REq()
        , STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__EQUALS_CONTENT"), FVM_BoundLabel("stdlib.equals", "__RETURN_TRUE"))
        ]
      )
    , 1
    )
  , FVM_Block(
      FVM_Label("__EQUALS_CONTENT")
    , None()
    , FVM_Seq(
        [ STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_IsFrame()
        , STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__VAR1_IS_INT"), FVM_BoundLabel("stdlib.equals", "__VAR1_IS_FRAME"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__VAR1_IS_INT")
    , None()
    , FVM_Seq(
        [ STC_Get(FVM_Path([FVM_Slot("1")]))
        , STC_IsFrame()
        , STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__COMPARE_INTS"), FVM_BoundLabel("stdlib.equals", "__RETURN_FALSE"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__VAR1_IS_FRAME")
    , None()
    , FVM_Seq(
        [ STC_Get(FVM_Path([FVM_Slot("1")]))
        , STC_IsFrame()
        , STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__RETURN_FALSE"), FVM_BoundLabel("stdlib.equals", "__VAR2_IS_FRAME"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__VAR2_IS_FRAME")
    , None()
    , FVM_Seq(
        [ STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_FSize()
        , STC_Get(FVM_Path([FVM_Slot("1")]))
        , STC_FSize()
        , STC_IEq()
        , STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__RETURN_FALSE"), FVM_BoundLabel("stdlib.equals", "__EQUAL_LENGTH"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__EQUAL_LENGTH")
    , None()
    , FVM_Seq(
        [ STC_New("1")
        , STC_ScopeNew(FVM_Link(Bind("P", 0)))
        , STC_IPush("0")
        , STC_Set(FVM_Path([FVM_Slot("0")]))
        , STC_Jump(FVM_BoundLabel("stdlib.equals", "__COMPARE_FRAMES"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__COMPARE_INTS")
    , None()
    , FVM_Seq(
        [ STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_Get(FVM_Path([FVM_Slot("1")]))
        , STC_IEq()
        , STC_Return()
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__COMPARE_FRAMES")
    , None()
    , FVM_Seq(
        [ STC_Get(
            FVM_Path([FVM_Link(Bind("P", 0)), FVM_Slot("0")])
          )
        , STC_FSize()
        , STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_IEq()
        , STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__COMPARE_IDX"), FVM_BoundLabel("stdlib.equals", "__RETURN_TRUE"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__COMPARE_IDX")
    , None()
    , FVM_Seq(
        [ STC_Get(
            FVM_Path([FVM_Link(Bind("P", 0)), FVM_Slot("0")])
          )
        , STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_IsEmptyR()
        , STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__COMPARE_IDX_F_NE"), FVM_BoundLabel("stdlib.equals", "__COMPARE_IDX_F_E"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__COMPARE_IDX_F_NE")
    , None()
    , FVM_Seq(
        [ STC_Get(
            FVM_Path([FVM_Link(Bind("P", 0)), FVM_Slot("1")])
          )
        , STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_IsEmptyR()
        , STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__COMPARE_IDX_S_NE"), FVM_BoundLabel("stdlib.equals", "__RETURN_FALSE"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__COMPARE_IDX_F_E")
    , None()
    , FVM_Seq(
        [ STC_Get(
            FVM_Path([FVM_Link(Bind("P", 0)), FVM_Slot("1")])
          )
        , STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_IsEmptyR()
        , STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__RETURN_FALSE"), FVM_BoundLabel("stdlib.equals", "__EQUAL_IDX"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__COMPARE_IDX_S_NE")
    , None()
    , FVM_Seq(
        [ STC_New("2")
        , STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_Get(
            FVM_Path([FVM_Link(Bind("P", 0)), FVM_Slot("0")])
          )
        , STC_DupN("2")
        , STC_GetR()
        , STC_Get(
            FVM_Path([FVM_Link(Bind("P", 0)), FVM_Slot("1")])
          )
        , STC_Swap()
        , STC_SwapN("2")
        , STC_GetR()
        , STC_DupN("3")
        , STC_Swap()
        , STC_SetR(FVM_Path([FVM_Slot("1")]))
        , STC_DupN("2")
        , STC_Swap()
        , STC_SetR(FVM_Path([FVM_Slot("0")]))
        , STC_Call(FVM_BoundLabel("stdlib.equals", "EQUALS"), FVM_BoundLabel("stdlib.equals", "__COMPARED_IDX"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__COMPARED_IDX")
    , None()
    , FVM_Seq(
        [STC_ContRGet(), STC_JumpZ(FVM_BoundLabel("stdlib.equals", "__RETURN_FALSE"), FVM_BoundLabel("stdlib.equals", "__EQUAL_IDX"))]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__EQUAL_IDX")
    , None()
    , FVM_Seq(
        [ STC_IPush("1")
        , STC_Get(FVM_Path([FVM_Slot("0")]))
        , STC_IAdd()
        , STC_Set(FVM_Path([FVM_Slot("0")]))
        , STC_Jump(FVM_BoundLabel("stdlib.equals", "__COMPARE_FRAMES"))
        ]
      )
    , 0
    )
  , FVM_Block(
      FVM_Label("__RETURN_FALSE")
    , None()
    , FVM_Seq([STC_IPush("0"), STC_Return()])
    , 0
    )
  , FVM_Block(
      FVM_Label("__RETURN_TRUE")
    , None()
    , FVM_Seq([STC_IPush("1"), STC_Return()])
    , 0
    )
  ]
)