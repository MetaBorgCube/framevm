#init 2
{  
	add (int:i, int:j):int = { 
  		return i + j
	}
	var x := 10
	var y := add(1, 3)
	print(y)		// print 4
}

ADD:
  	get [0] 		// i
  	get [1] 		// j
  	addi			// i + j
  	return 			//

MAIN:
	ipush 10		//
	set [0] 		// value of x in current frame
	new 2			// create new call frame
	dup				//	
	link [] P		// Link function scope to local scope
	dup 			// duplicate ref to call frame
	ipush 1 		// 
	setr [0] 		// j := 2 // assign to formal parameter j in call frame
	dup				//
	ipush 3 		// 
	setr [1] 		// j := 2 // assign to formal parameter j in call frame
	call ADD CONT2	// create operand stack with frame ref on top of stack and run INC
					// Returns to CONT
CONT2:
	rget
	print			//
					//
	ipush 0			// load exitcode 0
	return			// exit