module fixSeq

imports
	signatures/frameRvm-sig
    
rules
  	fix-seq: FVMR_Program(s, l, blocks) -> FVMR_Program(s, l, <map(fix-seq)> blocks)
 	fix-seq: FVMR_PseudoCode(body) -> FVMR_PseudoCode(body)
  	fix-seq: FVMR_Block(lbl, body) -> FVMR_Block(lbl, <fix-seq> body)
  	fix-seq: FVMR_RetSeqJump(ret, body, jump) -> Seq([ret |<concat> [body, [jump]]])
  	fix-seq: FVMR_SeqJump(body, jump) -> Seq(<concat> [body, [jump]])
  
  
  	resugar-seq: FVMR_Program(s, blocks, l) -> FVMR_Program(FVMR_InitSize(<int-to-string> s), [], <map(resugar-seq)> blocks)
    resugar-seq: FVMR_PseudoCode(body) -> FVMR_PseudoCode(body)
    resugar-seq: FVMR_Block(lbl, FVMR_SeqJump([h|body], last)) -> FVMR_Block(lbl, FVMR_RetSeqJump(h, body, last))
      where
      	_ := <is-ret> h
    resugar-seq: f@FVMR_Block(lbl, FVMR_SeqJump(body, last)) -> f
      	
    resugar-seq: FVMR_Block(lbl, Seq(body)) -> <resugar-seq> FVMR_Block(lbl, FVMR_SeqJump(body2, last))
      where
      	(body2, last) := <split-init-last> body
    
    is-ret: r@OnReturn(_, _) -> r
