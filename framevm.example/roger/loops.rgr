#init 1
{
	var count := 0
	for i = 0 -> 3:
		var j := i
		while j != 4:
			j := j + 1
			print (j)
			count := count + 1
		print(j)
//	print(j)				// should not work (scoping)
	print(count)			// print(9)
}

MAIN:
	local := 2
	r0 <- iload(0)
	set([0], r0)
	
	r1 <- new(2)
	newscope(r1, P, FOR_INIT)
	
FOR_INIT:
	set([0], iload(0))
	jump(FOR)

FOR:
	jumpz(lti(get([0]), iload(3)), FOR_END, FOR_BODY)

FOR_BODY:
	r0 <- get([0])
	set([1], r0)
	
	r1 <- new()
	newscope(r1, P, WHILE)

WHILE:
	r0 <- get([P, 1])
	jumpz(eqi(iload(4), r0), WHILE_BODY, WHILE_END) 
	
WHILE_BODY:	
	r0 <- get([P,1])
	print(r0)
	set([P,1], addi(r0, iload(1)))
	
	r1 <- get([P,P,0])
	set([P,P,0], addi(r1, iload(1))) 
	jump(WHILE)

WHILE_END:
	exitscope([P], FOR_INC)
	
FOR_INC:
	set([0], addi(iload(1), get([0])))
	jump(FOR)	
	
FOR_END:
	exitscope([P], MAIN_END)

MAIN_END:
	print(get([0]))
	return(iload(0))
	
	
	
	