#init 2
{  
	add (int:i, int:j):int = { 
  		return i + j
	}
	var x := 10
	var y := add(1, 3)
	print(y)		// print 4
}

ADD:
    locals := 2
  	a <- get([0]) @inline
  	b <- addi(a, get([1])) @inline // i + j
  	return(b)

MAIN:
	p <- iload(42)
	set([0], iload(10)) 		// store value of x in current frame
	call <- iload(1)			// create new call frame
	link(call, [], P)			// Link function scope to local scope
	set(call, [0], iload(1)) 	// j := 2 // assign to formal parameter j in call frame
	set(call, [1], iload(3)) 	// j := 2 // assign to formal parameter j in call frame
	call(call, ADD, CONT2)
//	
//CONT2:
//	r, p <- rget(2)
//	print(r)
//	print(addi(ipush(12), ipush(30)))
//	return(ipush(0))			// exit with exitcode 0
