#init 2
{
	rec A = {
		a: int
		func (i, j) = { 
  			return new C(i, j + a)
		}
	}
	
	rec B:A = {
		func2 (i) = { 
  			return i + 1
  		}
	}
	
	rec C = {
		i: int
		j: int
	}
	
	a := new B()
	a.a := 1
	b := a.func(1, a.func2(2))
	print(b.i)	 				// print 1
	print(b.j)  				// print 4	
}

MAIN:
	new 					// B frame
	dup						//
	new	1					// B superframe
	dup						//
	link [] P				// link super to main
	linkr P					// link B to super
	set [0]					// a := new B
							//
	ipush 1					//
	set [0, P, 0]			// a.a := 1
							//
	new 1					// function call frame
	dup						//
	link [0] P				// Link function scope to function of object in a
							//
	dup						//
	ipush 2					//
	setr [0]				// first argument of function
	
	call FUNC_2 MAIN_CONT
	
MAIN_CONT:	
	new	2					// call frame func
	dup						//
	link [0, P] P			// Link function to B's super
	
	dup						// func arg 1
	ipush 1					//
	setr [0]				// assign
	
	dup						// func arg 2
	get [r]					//
	setr [1]				// assign
							//
	call FUNC_1 MAIN_CONT2	//
	
MAIN_CONT2:
	get [r]					//
	set [0]					// Store ans in b
							//
	get [0, 0]				// print b.i
	print					//
							//
	get [0, 1]				// print b.j
	print					//
							//
	ipush 0					// load exitcode 0
	return					// exit
	
FUNC_2:
	get [0]					// i
	ipush 1					//
	addi					// i + 1
	return					//
	
FUNC_1:
	new	2					// New C
	dup						//
	link [P,P] P			// link to main
							//
	dup						//
	get [0]					//
	setr [0]				// Constructor arg 1
							//
	dup						//
	get [1]					// j
	get [P, 0]				// p
	addi					// j + p
	setr [1]				// Constructor arg 2
							// 
	return					// Return the instance of C
	
	
	